buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:11.4.0'
    }
}

plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.flywaydb.flyway' version '11.4.0'
}

bootJar {
    archiveFileName.set('application.jar')
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

group = 'br.com.brunno.admin.catalogo.infrastructure'
version = '1.0-SNAPSHOT'

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))
    implementation('mysql:mysql-connector-java')
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.8.0'
    implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'
    implementation 'com.google.guava:guava:33.4.5-jre'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test:2.4.17' // precisa de ajustes para subir para a vers√£o mais recente (3.2.4)
    testImplementation('org.flywaydb:flyway-core')
    testRuntimeOnly 'com.h2database:h2'
    testImplementation 'org.testcontainers:testcontainers:1.20.6'
    testImplementation 'org.testcontainers:mysql:1.20.6'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.6'
    testImplementation(project(path: ':domain', configuration: 'testClasses'))
}

flyway {
    url = System.getenv("FLAYWAY_DB") ?: 'jdbc:mysql://localhost:3306/adm_videos'
    user = System.getenv("FLAYWAY_USER") ?: 'root'
    password = System.getenv("FLAYWAY_PASS") ?: '123456'
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}